services:
  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    ports: ["9000:9000", "9001:9001"]
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    volumes:
      - minio-data:/data

  create-buckets:
    image: minio/mc:latest
    depends_on: [minio]
    entrypoint: ["/bin/sh","-c"]
    command: >
      until mc alias set local http://minio:9000 minio minio123; do sleep 2; done &&
      mc mb -p local/mlflow || true &&
      mc mb -p local/datasets || true

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    depends_on: [minio]
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
    ports: ["5000:5000"]

  prometheus:
    image: prom/prometheus:latest
    ports: ["9090:9090"]

  grafana:
    image: grafana/grafana:latest
    ports: ["3000:3000"]

volumes:
  minio-data:


# version: "3.9"

# services:
#   minio:
#     image: minio/minio:RELEASE.2024-09-22T00-00-00Z
#     command: ["server", "/data", "--console-address", ":9001"]
#     ports:
#       - "9000:9000"
#       - "9001:9001"
#     environment:
#       MINIO_ROOT_USER: minio
#       MINIO_ROOT_PASSWORD: minio123
#     volumes:
#       - minio-data:/data

#   create-buckets:
#     image: minio/mc:RELEASE.2024-08-17T17-18-03Z
#     depends_on:
#       - minio
#     entrypoint: ["/bin/sh", "-c"]
#     command: |
#       mc alias set local http://minio:9000 minio minio123 &&
#       mc mb -p local/mlflow || true &&
#       mc mb -p local/datasets || true &&
#       mc policy set public local/datasets || true &&
#       tail -f /dev/null

#   mlflow:
#     image: ghcr.io/mlflow/mlflow:v2.16.0
#     depends_on:
#       - minio
#       - create-buckets
#     ports:
#       - "5000:5000"
#     environment:
#       MLFLOW_S3_ENDPOINT_URL: http://minio:9000
#       AWS_ACCESS_KEY_ID: minio
#       AWS_SECRET_ACCESS_KEY: minio123
#     command: >
#       mlflow server --host 0.0.0.0 --port 5000
#       --backend-store-uri sqlite:////mlflow/mlflow.db
#       --artifacts-destination s3://mlflow
#     volumes:
#       - mlflow-data:/mlflow

#   prometheus:
#     image: prom/prometheus:v2.53.0
#     ports:
#       - "9090:9090"
#     volumes:
#       - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

#   grafana:
#     image: grafana/grafana-oss:11.2.0
#     ports:
#       - "3000:3000"
#     environment:
#       GF_PATHS_PROVISIONING: /etc/grafana/provisioning
#     volumes:
#       - ../grafana/provisioning:/etc/grafana/provisioning

# volumes:
#   minio-data: {}
#   mlflow-data: {}
