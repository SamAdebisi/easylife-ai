version: "3.9"

services:
  minio:
    image: minio/minio:latest
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  create-buckets:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: /bin/sh -c
    environment:
      MC_HOST_local: http://minio:minio123@minio:9000
    command:
      - mc mb --ignore-existing local/mlflow &&
        mc mb --ignore-existing local/datasets &&
        mc anonymous set public local/datasets

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.16.0
    depends_on:
      minio:
        condition: service_healthy
      create-buckets:
        condition: service_completed_successfully
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
    command: >
      mlflow server --host 0.0.0.0 --port 5000
      --backend-store-uri sqlite:////mlflow/mlflow.db
      --artifacts-destination s3://mlflow
    ports:
      - "5001:5000"
    volumes:
      - mlflow-data:/mlflow

  prometheus:
    image: prom/prometheus:v2.53.0
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana-oss:11.2.0
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on:
      prometheus:
        condition: service_started
    volumes:
      - ../grafana/provisioning:/etc/grafana/provisioning

volumes:
  minio-data: {}
  mlflow-data: {}
